# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

###########################3

# ~/.bash_profile
#     - should be super-simple and just load .profile and .bashrc (in that order)
#
# ~/.profile
#     - has the stuff NOT specifically related to bash, such as environment variables (PATH and friends)
#     - anything that should be available to graphical applications OR to sh (or bash invoked as sh) MUST be in ~/.profile
#     - anything that should be available only to login shells should go in ~/.profile
#
# ~/.bashrc
#   - has anything you'd want at an interactive command line.  Command prompt, EDITOR variable, bash aliases for my use
#   - must not output anything
#
# ~/.bash_login
#   - must not exist!!!


# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

#-----------------------------
# Fancy color prompt
case "$TERM" in
    xterm|xterm-color|*-256color) color_prompt=yes;;
esac

# if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
#     # We have color support; assume it's compliant with Ecma-48
#     # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
#     # a case would tend to support setf rather than setaf.)
#     color_prompt=yes
# else
#     color_prompt=
# fi

if [ "$color_prompt" = yes ]; then
    if [[ ${EUID} == 0 ]] ; then
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;31m\]\h\[\033[01;34m\] \W \$\[\033[00m\] '
    else
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\w \$\[\033[00m\] '
    fi
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h \w \$ '
fi

# Set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*|alacritty)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Enable programmable completion features (you don't need to enable this if it's already enabled
# in /etc/bash.bashrc and /etc/profile sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Alias definitions.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
alias ls='ls -AFh  --show-control-chars --color=auto --group-directories-first'
alias la='ls -a    --show-control-chars --color=auto --group-directories-first'
alias ll='ls -AFhl --show-control-chars --color=auto --group-directories-first'

alias grep='grep --color=auto'

alias df='df -h'

# pip bash completion start
# https://pip.pypa.io/en/latest/user_guide/#command-completion
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 2>/dev/null ) )
}
complete -o default -F _pip_completion /usr/bin/python -m pip
# pip bash completion end


# ssh agent stuff
eval `keychain --eval --quiet --inherit any-once --agents ssh id_rsa`


# #------------------------------------------------
# # General path modifications
# # http://www.tldp.org/HOWTO/HighQuality-Apps-HOWTO/fhs.html
# my_prefix=${HOME}/.local
# # Python virtual environments
# # https://virtualenvwrapper.readthedocs.io/en/latest/install.html
# export VIRTUALENVWRAPPER_PYTHON=${my_prefix}/bin/python3.8
# export VIRTUALENVWRAPPER_VIRTUALENV=${my_prefix}/bin/virtualenv
# source ${my_prefix}/bin/virtualenvwrapper.sh
# export WORKON_HOME=${HOME}/.virtualenvs
# export PROJECT_HOME=${HOME}/Projects
# # System paths
# # http://www.tldp.org/HOWTO/HighQuality-Apps-HOWTO/fhs.html
# export PATH=${PATH}:/usr/local/bin
# export LIBRARY_PATH=/usr/local/lib:${LIBRARY_PATH}
# export C_INCLUDE_PATH=/usr/local/include:${C_INCLUDE_PATH}
# export CPLUS_INCLUDE_PATH=/usr/local/include:${CPLUS_INCLUDE_PATH}
# export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:${PKG_CONFIG_PATH}  # https://askubuntu.com/questions/210210/pkg-config-path-environment-variable
# # Local paths
# # http://www.tldp.org/HOWTO/HighQuality-Apps-HOWTO/fhs.html
# export PATH=${PATH}:${my_prefix}/bin
# export LIBRARY_PATH=${my_prefix}/lib:${LIBRARY_PATH}
# export C_INCLUDE_PATH=${my_prefix}/include:${C_INCLUDE_PATH}
# export CPLUS_INCLUDE_PATH=${my_prefix}/include:${CPLUS_INCLUDE_PATH}
# export PKG_CONFIG_PATH=${my_prefix}/lib/pkgconfig:${PKG_CONFIG_PATH}
# # https://askubuntu.com/questions/210210/pkg-config-path-environment-variable
# #------------------------------------------------
# # https://stackoverflow.com/questions/4250624/ld-library-path-vs-library-path
# #    LIBRARY_PATH is used by gcc before compilation to search directories containing static and shared libraries that need to be linked to your program.
# # LD_LIBRARY_PATH is used by your program to search directories containing shared libraries after it has been successfully compiled and linked.
# # Why LD_LIBRARY_PATH is bad: http://xahlee.info/UnixResource_dir/_/ldpath.html
# # export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${usr_prefix}/lib
# # export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${my_prefix}/lib


